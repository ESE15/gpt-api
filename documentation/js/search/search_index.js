var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1,1,1.215]],["body/controllers/AppController.html",[0,1.406,1,1.708,2,1.298,3,1.068,4,0.714,5,0.877,6,1.97,7,0.714,8,1.708,9,3.079,10,1.97,11,0.075,12,1.298,13,2.554,14,1.298,15,1.406,16,1.406,17,0.877,18,1.29,19,1.97,20,1.068,21,1.068,22,1.585,23,1.585,24,1.068,25,2.554,26,0.055,27,0.055]],["title/modules/AppModule.html",[28,1.484,29,1.215]],["body/modules/AppModule.html",[1,1.683,2,1.447,3,0.838,4,0.56,5,0.688,11,0.075,16,1.702,17,0.688,18,1.359,19,1.546,20,0.838,21,0.838,26,0.046,27,0.046,28,1.767,29,2.113,30,1.244,31,1.447,32,1.546,33,1.546,34,1.359,35,2.196,36,1.546,37,1.546,38,2.004,39,2.847,40,1.683,41,2.004,42,2.004,43,2.004,44,2.004,45,1.244,46,1.767,47,1.244,48,2.004,49,2.004,50,2.004,51,2.004,52,2.004]],["title/injectables/AppService.html",[18,0.821,53,1]],["body/injectables/AppService.html",[3,1.147,4,0.766,5,0.942,7,0.766,8,1.789,9,3.164,11,0.074,12,1.393,14,1.393,15,1.472,16,1.147,17,0.942,18,1.209,20,1.147,21,1.147,24,1.147,26,0.057,27,0.057,53,1.472,54,1.702,55,2.115,56,2.742,57,2.742,58,2.742]],["title/controllers/OpenaiController.html",[0,1,40,1.215]],["body/controllers/OpenaiController.html",[0,1.301,2,0.911,3,0.75,4,0.501,5,0.616,7,0.501,8,1.335,10,1.383,11,0.074,12,0.911,14,1.335,15,1.432,16,1.099,17,0.616,20,0.75,21,0.75,22,1.113,23,1.113,24,0.75,26,0.043,27,0.043,34,0.903,40,1.335,59,1.383,60,1.793,61,2.399,62,1.335,63,2.027,64,1.93,65,2.027,66,1.383,67,2.628,68,3.113,69,1.793,70,2.027,71,2.027,72,2.027,73,2.027,74,2.027,75,2.027,76,3.036,77,1.383,78,1.383,79,0.911,80,1.383,81,2.027,82,1.93,83,2.027,84,1.793,85,1.793,86,1.793,87,1.793,88,1.383,89,1.793,90,1.793]],["title/injectables/OpenaiService.html",[34,0.821,53,1]],["body/injectables/OpenaiService.html",[3,0.47,4,0.314,5,0.386,7,0.314,8,0.93,11,0.076,12,0.93,14,0.93,15,1.115,16,0.968,17,0.386,20,0.47,21,0.47,22,0.698,23,0.698,24,0.47,26,0.03,27,0.03,34,0.628,45,0.698,53,0.765,54,0.698,61,2.264,62,0.93,63,2.264,64,1.436,65,1.411,66,1.411,68,2.666,70,1.411,71,1.411,72,2.264,73,2.056,74,1.411,75,1.411,76,2.757,77,1.411,78,1.411,79,1.176,80,1.411,81,1.411,82,1.436,83,1.411,88,0.867,91,0.867,92,1.829,93,1.829,94,1.124,95,1.124,96,3.146,97,1.124,98,1.124,99,1.411,100,2.666,101,1.829,102,1.124,103,1.124,104,1.124,105,1.124,106,1.829,107,1.124,108,1.124,109,1.124,110,2.314,111,1.124,112,1.124,113,1.124,114,1.124,115,2.314,116,1.829,117,1.411,118,2.314,119,1.411,120,1.829,121,0.867,122,1.829,123,1.829,124,0.867,125,1.124,126,1.124,127,1.124,128,1.124,129,1.124,130,1.124,131,1.124,132,0.867,133,1.124,134,1.829,135,1.124,136,1.124,137,1.124,138,1.124,139,1.829,140,0.867,141,2.666,142,1.124,143,1.124,144,1.124,145,1.124,146,1.124,147,1.124,148,1.124]],["title/coverage.html",[149,1.997]],["body/coverage.html",[0,1.314,1,1.173,5,0.793,6,1.781,11,0.073,18,0.793,26,0.051,27,0.051,34,0.793,40,1.173,46,1.433,47,1.95,53,1.314,55,1.781,59,1.781,79,1.173,91,1.781,117,1.781,140,1.781,149,1.433,150,2.309,151,2.309,152,2.309,153,4.232,154,3.142,155,2.423,156,3.833,157,4.009,158,1.781,159,1.781,160,1.781,161,1.781,162,2.309,163,1.781,164,2.309,165,2.309,166,2.309,167,2.309,168,2.309]],["title/dependencies.html",[31,1.455,169,1.558]],["body/dependencies.html",[11,0.076,17,0.894,26,0.055,27,0.055,31,1.323,45,1.615,99,2.007,170,3.792,171,2.603,172,2.603,173,2.603,174,2.603,175,2.603,176,2.603,177,2.603,178,2.603,179,2.603,180,2.603,181,2.603,182,3.403,183,2.603,184,2.603,185,2.603,186,2.603,187,2.603,188,2.603,189,2.603,190,2.603,191,2.603,192,2.603]],["title/miscellaneous/functions.html",[193,1.027,194,2.209]],["body/miscellaneous/functions.html",[7,0.935,11,0.065,26,0.065,27,0.065,161,2.582,163,3.279,193,1.701,194,2.582,195,3.347]],["title/index.html",[7,0.565,196,2.02,197,2.02]],["body/index.html",[4,0.555,11,0.073,26,0.046,27,0.046,62,1.008,124,1.531,149,1.232,198,1.985,199,1.985,200,2.827,201,1.985,202,1.985,203,1.985,204,1.985,205,1.985,206,1.985,207,3.294,208,1.985,209,1.985,210,1.985,211,1.985,212,4.058,213,1.985,214,1.985,215,1.985,216,3.944,217,1.985,218,1.985,219,2.827,220,1.985,221,1.985,222,1.985,223,1.985,224,2.827,225,2.827,226,1.985,227,1.985,228,1.985,229,2.827,230,2.827,231,1.985,232,1.985,233,1.985,234,1.985,235,1.985,236,1.531,237,1.985,238,1.985,239,1.985,240,1.985,241,1.985,242,1.985,243,1.985,244,1.985,245,1.985,246,1.531,247,1.985,248,1.985,249,1.985,250,1.985,251,1.985,252,1.985,253,1.531]],["title/modules.html",[30,1.997]],["body/modules.html",[11,0.065,26,0.065,27,0.065,29,1.729,30,2.112,236,2.625,254,3.403,255,3.403,256,3.403]],["title/overview.html",[257,2.481]],["body/overview.html",[2,1.452,11,0.068,18,1.361,26,0.059,27,0.059,28,1.773,29,2.229,31,1.836,32,2.204,33,2.204,34,1.361,35,2.787,36,2.204,37,2.204,54,1.773,119,2.204,257,2.204,258,3.613]],["title/properties.html",[169,1.558,259,2.209]],["body/properties.html",[11,0.074,26,0.064,27,0.064,62,1.647,246,2.5,253,2.5,259,2.5,260,3.241,261,3.241,262,3.241,263,3.241]],["title/miscellaneous/variables.html",[193,1.027,264,2.209]],["body/miscellaneous/variables.html",[4,0.746,7,0.512,11,0.077,15,0.767,24,1.318,26,0.043,27,0.043,46,1.658,47,2.148,64,1.138,79,1.601,82,1.138,100,1.414,121,1.414,132,1.414,155,1.414,158,2.06,159,1.414,160,1.414,193,0.932,264,1.414,265,1.834,266,1.834,267,2.671,268,3.678,269,3.46,270,3.839,271,1.834,272,1.834,273,1.834,274,1.834,275,1.834,276,1.834,277,2.671,278,1.834,279,1.834,280,1.834,281,1.834,282,1.834,283,1.834,284,1.834,285,2.671,286,3.15,287,1.834,288,1.834,289,1.834,290,1.834,291,1.834,292,1.834]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":153,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":261,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":123,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["0.1.13",{"_index":190,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":157,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":154,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":119,"title":{},"body":{"injectables/OpenaiService.html":{},"overview.html":{}}}],["1.3.4",{"_index":179,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":117,"title":{},"body":{"injectables/OpenaiService.html":{},"coverage.html":{}}}],["2",{"_index":258,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":171,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":166,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":135,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["3",{"_index":73,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["4",{"_index":105,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["4.0.1",{"_index":185,"title":{},"body":{"dependencies.html":{}}}],["4.14.191",{"_index":176,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["4.6.5",{"_index":187,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":165,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":192,"title":{},"body":{"dependencies.html":{}}}],["8.10.0",{"_index":183,"title":{},"body":{"dependencies.html":{}}}],["8.6.6",{"_index":178,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":170,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":237,"title":{},"body":{"index.html":{}}}],["api",{"_index":63,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["apiurl",{"_index":106,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["app",{"_index":214,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application/json",{"_index":112,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["applications",{"_index":206,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array.isarray(value",{"_index":284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":64,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":246,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":113,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["await",{"_index":132,"title":{},"body":{"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":99,"title":{},"body":{"injectables/OpenaiService.html":{},"dependencies.html":{}}}],["axios.post(apiurl",{"_index":133,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["backers",{"_index":238,"title":{},"body":{"index.html":{}}}],["based",{"_index":74,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["bearer",{"_index":114,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["boolean",{"_index":282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":163,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":256,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":254,"title":{},"body":{"modules.html":{}}}],["building",{"_index":201,"title":{},"body":{"index.html":{}}}],["catch",{"_index":146,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["class",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":145,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["codex",{"_index":104,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["codex/completions",{"_index":108,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["config",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":96,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["configuration",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.error('error",{"_index":147,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["const",{"_index":100,"title":{},"body":{"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":94,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["constructor(configservice",{"_index":95,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["content",{"_index":111,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/OpenaiController.html":{}},"body":{"controllers/AppController.html":{},"controllers/OpenaiController.html":{},"coverage.html":{}}}],["controller('openai",{"_index":86,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/OpenaiController.html":{},"overview.html":{}}}],["coverage",{"_index":149,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["data",{"_index":115,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["davinci",{"_index":103,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/OpenaiController.html":{}}}],["deep",{"_index":276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":62,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":215,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":150,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":226,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":202,"title":{},"body":{"index.html":{}}}],["english",{"_index":127,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["environment",{"_index":273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.config",{"_index":279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":141,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["ese15",{"_index":263,"title":{},"body":{"properties.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["express",{"_index":174,"title":{},"body":{"dependencies.html":{}}}],["failed",{"_index":143,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"coverage.html":{}}}],["following",{"_index":126,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["framework",{"_index":200,"title":{},"body":{"index.html":{}}}],["function",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":194,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":81,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["generated",{"_index":83,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["generatedtext",{"_index":136,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["generatedtext.trim",{"_index":138,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["generates",{"_index":70,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["generatetext",{"_index":65,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["generatetext(@query('prompt",{"_index":89,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["generatetext(prompt",{"_index":66,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["generating",{"_index":148,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["get('generate",{"_index":67,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":196,"title":{"index.html":{}},"body":{}}],["given",{"_index":75,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["gpt",{"_index":72,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["grow",{"_index":233,"title":{},"body":{"index.html":{}}}],["headers",{"_index":110,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["hello",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":243,"title":{},"body":{"index.html":{}}}],["https://api.openai.com/v1/engines/davinci",{"_index":107,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["https://api.openai.com/v1/engines/davinci/completions",{"_index":109,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["https://nestjs.com",{"_index":250,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":151,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["import(`./${process.env.node_env",{"_index":274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["injectable",{"_index":53,"title":{"injectables/AppService.html":{},"injectables/OpenaiService.html":{}},"body":{"injectables/AppService.html":{},"injectables/OpenaiService.html":{},"coverage.html":{}}}],["injectables",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"injectables/OpenaiService.html":{},"overview.html":{}}}],["installation",{"_index":211,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":213,"title":{},"body":{"index.html":{}}}],["interacting",{"_index":93,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["isglobal",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["isobject(value",{"_index":280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":240,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":247,"title":{},"body":{"index.html":{}}}],["korean:\\n\\n\"hello",{"_index":128,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["license",{"_index":253,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":230,"title":{},"body":{"index.html":{}}}],["load",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lodash",{"_index":180,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max_tokens",{"_index":116,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["merge",{"_index":277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":189,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["miscellaneous",{"_index":193,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":229,"title":{},"body":{"index.html":{}}}],["mode",{"_index":219,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":242,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":248,"title":{},"body":{"index.html":{}}}],["n",{"_index":118,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["name",{"_index":78,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["nest",{"_index":207,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":252,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"injectables/OpenaiService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":172,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":173,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":140,"title":{},"body":{"injectables/OpenaiService.html":{},"coverage.html":{}}}],["node.js",{"_index":199,"title":{},"body":{"index.html":{}}}],["null",{"_index":121,"title":{},"body":{"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign(source[key",{"_index":290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(source).foreach((key",{"_index":287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":231,"title":{},"body":{"index.html":{}}}],["openai",{"_index":61,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["openai.service",{"_index":85,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["openai/openai.controller",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["openai/openai.service",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["openai_api_key",{"_index":271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openaiapikey",{"_index":101,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["openaicontroller",{"_index":40,"title":{"controllers/OpenaiController.html":{}},"body":{"modules/AppModule.html":{},"controllers/OpenaiController.html":{},"coverage.html":{}}}],["openaiservice",{"_index":34,"title":{"injectables/OpenaiService.html":{}},"body":{"modules/AppModule.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"coverage.html":{},"overview.html":{}}}],["openapiservice",{"_index":87,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["optional",{"_index":80,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["out",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":257,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":169,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":88,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["parameters",{"_index":77,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["pg",{"_index":182,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":124,"title":{},"body":{"injectables/OpenaiService.html":{},"index.html":{}}}],["prefix",{"_index":60,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["process.env.openai_api_key",{"_index":272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":221,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":198,"title":{},"body":{"index.html":{}}}],["project",{"_index":232,"title":{},"body":{"index.html":{}}}],["promise",{"_index":82,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["prompt",{"_index":76,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["properties",{"_index":259,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["query",{"_index":84,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["read",{"_index":241,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["record",{"_index":286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis",{"_index":186,"title":{},"body":{"dependencies.html":{}}}],["reflect",{"_index":188,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":210,"title":{},"body":{"index.html":{}}}],["request",{"_index":142,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["reset",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":131,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["response.data.choices[0].text",{"_index":137,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["response.status",{"_index":134,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["run",{"_index":216,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":191,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":203,"title":{},"body":{"index.html":{}}}],["server",{"_index":204,"title":{},"body":{"index.html":{}}}],["service",{"_index":92,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["side",{"_index":205,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["source[key",{"_index":292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sponsors",{"_index":235,"title":{},"body":{"index.html":{}}}],["src/.../configuration.ts",{"_index":267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default.ts",{"_index":265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local.ts",{"_index":266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":195,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/configuration.ts",{"_index":155,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/default.ts",{"_index":159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/local.ts",{"_index":160,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":161,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/openai/openai.controller.ts",{"_index":59,"title":{},"body":{"controllers/OpenaiController.html":{},"coverage.html":{}}}],["src/openai/openai.controller.ts:18",{"_index":69,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["src/openai/openai.service.ts",{"_index":91,"title":{},"body":{"injectables/OpenaiService.html":{},"coverage.html":{}}}],["src/openai/openai.service.ts:18",{"_index":98,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["src/openai/openai.service.ts:9",{"_index":97,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["start",{"_index":217,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":220,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":222,"title":{},"body":{"index.html":{}}}],["started",{"_index":197,"title":{"index.html":{}},"body":{}}],["starter",{"_index":209,"title":{},"body":{"index.html":{}}}],["statements",{"_index":152,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":144,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["stay",{"_index":244,"title":{},"body":{"index.html":{}}}],["stop",{"_index":120,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":236,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":255,"title":{},"body":{"modules.html":{}}}],["t",{"_index":281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temperature",{"_index":122,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["test",{"_index":225,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":228,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":227,"title":{},"body":{"index.html":{}}}],["tests",{"_index":224,"title":{},"body":{"index.html":{}}}],["text",{"_index":68,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["thanks",{"_index":234,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get('openai_api_key",{"_index":102,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["this.isobject(source[key",{"_index":289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.isobject(target[key",{"_index":288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.merge(target[key",{"_index":291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.openapiservice.generatetext(prompt",{"_index":90,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["throw",{"_index":139,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["touch",{"_index":245,"title":{},"body":{"index.html":{}}}],["translate",{"_index":125,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["true",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["try",{"_index":130,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["twitter",{"_index":251,"title":{},"body":{"index.html":{}}}],["type",{"_index":79,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":184,"title":{},"body":{"dependencies.html":{}}}],["types/lodash",{"_index":175,"title":{},"body":{"dependencies.html":{}}}],["types/pg",{"_index":177,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":208,"title":{},"body":{"index.html":{}}}],["unit",{"_index":223,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":262,"title":{},"body":{"properties.html":{}}}],["using",{"_index":71,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["util",{"_index":158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["util.merge(config",{"_index":278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":156,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":264,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":260,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":218,"title":{},"body":{"index.html":{}}}],["website",{"_index":249,"title":{},"body":{"index.html":{}}}],["world",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":212,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":239,"title":{},"body":{"index.html":{}}}],["you?\"\\n\\n번역:\\n",{"_index":129,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["zoom",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nOpenaiService\n\nOpenaiService\n\nAppModule -->\n\nOpenaiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            OpenaiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            OpenaiController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { OpenaiService } from './openai/openai.service';\nimport { OpenaiController } from './openai/openai.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { configuration } from './config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n    }),\n  ],\n  controllers: [AppController, OpenaiController],\n  providers: [AppService, OpenaiService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OpenaiController.html":{"url":"controllers/OpenaiController.html","title":"controller - OpenaiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OpenaiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openai/openai.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                openai\n            \n\n\n            \n                Description\n            \n            \n                A controller for the OpenAI API\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateText\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateText(prompt: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('generate-text')\n                \n            \n\n            \n                \n                    Defined in src/openai/openai.controller.ts:18\n                \n            \n\n\n            \n                \n                    Generates text using GPT-3 based on the given prompt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe prompt to generate text for.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The generated text.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { OpenaiService } from './openai.service';\n\n/**\n * A controller for the OpenAI API\n */\n@Controller('openai')\nexport class OpenaiController {\n  constructor(private readonly openapiService: OpenaiService) {}\n\n  /**\n   * Generates text using GPT-3 based on the given prompt\n   *\n   * @param {string} prompt - The prompt to generate text for.\n   * @returns {Promise} The generated text.\n   */\n  @Get('generate-text')\n  async generateText(@Query('prompt') prompt: string): Promise {\n    return this.openapiService.generateText(prompt);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpenaiService.html":{"url":"injectables/OpenaiService.html","title":"injectable - OpenaiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OpenaiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openai/openai.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service for interacting with the OpenAI GPT-3 API.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/openai/openai.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateText\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateText(prompt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/openai/openai.service.ts:18\n                \n            \n\n\n            \n                \n                    Generates text using the OpenAI GPT-3 API based on the given prompt.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe prompt to generate text for.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The generated text.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport axios from 'axios';\n\n/**\n * A service for interacting with the OpenAI GPT-3 API.\n */\n@Injectable()\nexport class OpenaiService {\n  constructor(private readonly configService: ConfigService) {}\n\n  /**\n   * Generates text using the OpenAI GPT-3 API based on the given prompt.\n   *\n   * @param {string} prompt - The prompt to generate text for.\n   * @returns {Promise} The generated text.\n   */\n  async generateText(prompt: string): Promise {\n    const openaiApiKey = this.configService.get('OPENAI_API_KEY');\n    // davinci-codex는 gpt-4 출시 이후 사용할 엔진이름임\n    //const apiUrl = `https://api.openai.com/v1/engines/davinci-codex/completions`;\n    const apiUrl = `https://api.openai.com/v1/engines/davinci/completions`;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${openaiApiKey}`,\n    };\n\n    const data = {\n      prompt: prompt,\n      max_tokens: 100,\n      n: 1,\n      stop: null,\n      temperature: 0.1,\n    };\n    // const data = {\n    //   prompt: `Please translate the following English text to Korean:\\n\\n\"Hello, how are you?\"\\n\\n번역:\\n`,\n    //   max_tokens: 100,\n    //   n: 1,\n    //   stop: ['\\n'],\n    //   temperature: 0.1,\n    // };\n\n    try {\n      const response = await axios.post(apiUrl, data, { headers: headers });\n      if (response.status === 200) {\n        const generatedText = response.data.choices[0].text;\n        return generatedText.trim();\n      } else {\n        throw new Error(\n          `OpenAI API request failed with status code ${response.status}`,\n        );\n      }\n    } catch (error) {\n      console.error('Error generating text:', error);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            util\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/default.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/local.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/openai/openai.controller.ts\n            \n            controller\n            OpenaiController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/openai/openai.service.ts\n            \n            injectable\n            OpenaiService\n            \n                66 %\n                (2/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @types/lodash : ^4.14.191\n        \n            @types/pg : ^8.6.6\n        \n            axios : ^1.3.4\n        \n            lodash : ^4.17.21\n        \n            pg : ^8.10.0\n        \n            pg-types : ^4.0.1\n        \n            redis : ^4.6.5\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ yarn installRunning the app\n# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\n# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nOpenaiService\n\nOpenaiService\n\nAppModule -->\n\nOpenaiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : ese15\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../default.ts)\n                        \n                        \n                            config   (src/.../local.ts)\n                        \n                        \n                            configuration   (src/.../configuration.ts)\n                        \n                        \n                            util   (src/.../configuration.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/default.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n    src/config/local.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  OPENAI_API_KEY: process.env.OPENAI_API_KEY,\n}\n                    \n                \n\n\n        \n    \n\n    src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise> => {\n  const environment = await import(`./${process.env.NODE_ENV || 'local'}`);\n\n  // object deep merge\n  return util.merge(config, environment.config);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        util\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  isObject(value: T): boolean {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n  },\n  merge(\n    target: Record,\n    source: Record,\n  ): Record {\n    Object.keys(source).forEach((key: string) => {\n      if (this.isObject(target[key]) && this.isObject(source[key])) {\n        Object.assign(source[key], this.merge(target[key], source[key]));\n      }\n    });\n\n    return { ...target, ...source };\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
