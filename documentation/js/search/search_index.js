var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.07,1,1.284]],["body/controllers/AppController.html",[0,1.513,1,1.816,2,1.151,3,0.96,4,0.652,5,0.795,6,2.056,7,0.795,8,1.816,9,3.207,10,2.056,11,0.07,12,1.382,13,2.643,14,1.382,15,1.513,16,1.261,17,0.795,18,1.409,19,2.056,20,0.96,21,0.96,22,1.67,23,1.67,24,1.151,25,2.643,26,0.051,27,0.051]],["title/modules/AppModule.html",[28,1.284,29,1.284]],["body/modules/AppModule.html",[1,1.766,2,1.262,3,0.736,4,0.5,5,0.61,11,0.07,16,1.472,17,0.61,18,1.472,19,1.578,20,0.736,21,0.736,26,0.043,27,0.043,28,1.766,29,2.231,30,1.262,31,1.262,32,1.578,33,1.578,34,1.578,35,1.766,36,1.83,37,1.282,38,1.282,39,2.028,40,2.254,41,2.629,42,2.028,43,2.028,44,2.028,45,2.028,46,2.028,47,1.282,48,1.83,49,1.282,50,2.028,51,2.028,52,2.028,53,2.028,54,2.028]],["title/injectables/AppService.html",[18,0.892,55,1.07]],["body/injectables/AppService.html",[3,1.03,4,0.699,5,0.854,7,0.854,8,1.901,9,3.294,11,0.069,12,1.483,14,1.483,15,1.584,16,1.03,17,0.854,18,1.32,20,1.03,21,1.03,24,1.236,26,0.054,27,0.054,55,1.584,56,1.792,57,2.207,58,2.836,59,2.836,60,2.836]],["title/controllers/OpenaiController.html",[0,1.07,61,1.284]],["body/controllers/OpenaiController.html",[0,1.402,2,0.81,3,0.675,4,0.459,5,0.56,7,0.56,8,1.423,10,1.447,11,0.069,12,0.972,14,1.423,15,1.543,16,0.988,17,0.56,20,0.675,21,0.675,22,1.175,23,1.175,24,0.81,26,0.04,27,0.04,61,1.423,62,1.447,63,1.86,64,2.033,65,1.423,66,1.72,67,2.033,68,2.117,69,1.447,70,2.721,71,3.243,72,1.86,73,2.117,74,2.117,75,2.117,76,2.117,77,2.117,78,2.117,79,3.163,80,1.447,81,1.447,82,0.972,83,1.447,84,2.117,85,2.033,86,2.117,87,1.86,88,0.988,89,1.447,90,1.86,91,1.86,92,1.447,93,1.86,94,1.86]],["title/modules/OpenaiModule.html",[28,1.284,35,1.07]],["body/modules/OpenaiModule.html",[2,1.421,3,0.873,4,0.593,5,0.724,11,0.069,16,1.344,17,0.724,20,0.873,21,0.873,26,0.048,27,0.048,28,1.935,30,1.048,31,1.421,35,1.864,36,2.061,37,1.52,38,1.52,40,2.538,41,1.871,61,1.935,64,1.52,66,1.52,88,1.553,89,1.871,95,1.871,96,1.871,97,2.404,98,2.404,99,2.404,100,2.404,101,2.404]],["title/injectables/OpenaiService.html",[55,1.07,88,0.892]],["body/injectables/OpenaiService.html",[3,0.424,4,0.288,5,0.352,7,0.352,8,0.993,11,0.071,12,0.993,14,0.993,15,1.203,16,0.871,17,0.352,20,0.424,21,0.424,22,0.738,23,0.738,24,0.509,26,0.028,27,0.028,47,0.738,55,0.827,56,0.738,64,1.92,65,0.993,66,1.92,67,1.516,68,1.477,69,1.477,71,2.782,73,1.477,74,1.477,75,2.364,76,2.149,77,1.477,78,1.477,79,2.876,80,1.477,81,1.477,82,1.254,83,1.477,84,1.477,85,1.516,86,1.477,88,0.689,92,0.909,102,0.909,103,1.898,104,1.898,105,1.168,106,1.168,107,3.255,108,1.168,109,1.168,110,1.477,111,2.782,112,1.898,113,1.168,114,1.168,115,1.168,116,1.168,117,1.898,118,1.168,119,1.168,120,1.168,121,2.398,122,1.168,123,1.168,124,1.168,125,1.168,126,2.398,127,1.898,128,1.477,129,2.398,130,1.898,131,1.898,132,0.909,133,1.898,134,1.898,135,0.909,136,1.168,137,1.168,138,1.168,139,1.168,140,1.168,141,1.168,142,1.168,143,0.909,144,1.168,145,1.898,146,1.168,147,1.168,148,1.168,149,1.168,150,1.898,151,0.909,152,2.762,153,1.168,154,1.168,155,1.168,156,1.168,157,1.168,158,1.168,159,1.168]],["title/coverage.html",[160,2.09]],["body/coverage.html",[0,1.416,1,1.25,5,0.72,6,1.861,11,0.068,18,0.868,26,0.048,27,0.048,48,1.511,49,2.053,55,1.416,57,1.861,61,1.25,62,1.861,82,1.25,88,0.868,102,1.861,128,1.861,151,1.861,160,1.511,161,2.391,162,2.391,163,2.391,164,4.368,165,3.249,166,2.528,167,3.959,168,4.14,169,1.861,170,1.861,171,1.861,172,1.861,173,2.391,174,1.861,175,2.391,176,2.391,177,2.391,178,2.391,179,2.391]],["title/dependencies.html",[31,1.281,180,1.612]],["body/dependencies.html",[11,0.07,17,0.811,26,0.052,27,0.052,31,1.173,47,1.702,110,2.095,181,3.915,182,2.693,183,2.693,184,2.693,185,2.693,186,2.693,187,2.693,188,2.693,189,2.693,190,2.693,191,2.693,192,2.693,193,3.516,194,2.693,195,2.693,196,2.693,197,2.693,198,2.693,199,2.693,200,2.693,201,2.693,202,2.693,203,2.693]],["title/miscellaneous/functions.html",[204,1.083,205,2.288]],["body/miscellaneous/functions.html",[7,1.04,11,0.06,26,0.06,27,0.06,172,2.689,174,3.412,204,1.807,205,2.689,206,3.455]],["title/index.html",[7,0.624,207,2.071,208,2.071]],["body/index.html",[4,0.507,11,0.068,26,0.043,27,0.043,65,1.076,135,1.601,160,1.3,209,2.057,210,2.057,211,2.926,212,2.057,213,2.057,214,2.057,215,2.057,216,2.057,217,2.057,218,3.405,219,2.057,220,2.057,221,2.057,222,2.057,223,4.19,224,2.057,225,2.057,226,2.057,227,4.073,228,2.057,229,2.057,230,2.926,231,2.057,232,2.057,233,2.057,234,2.057,235,2.926,236,2.926,237,2.057,238,2.057,239,2.057,240,2.926,241,2.926,242,2.057,243,2.057,244,2.057,245,2.057,246,2.057,247,1.601,248,2.057,249,2.057,250,2.057,251,2.057,252,2.057,253,2.057,254,2.057,255,2.057,256,2.057,257,1.601,258,2.057,259,2.057,260,2.057,261,2.057,262,2.057,263,2.057,264,1.601]],["title/modules.html",[30,1.441]],["body/modules.html",[11,0.06,26,0.06,27,0.06,29,1.764,30,1.47,35,1.47,247,3.151,265,4.05,266,4.05,267,4.05]],["title/overview.html",[268,2.573]],["body/overview.html",[2,1.211,11,0.064,18,1.444,26,0.053,27,0.053,29,2.33,30,1.211,31,1.564,32,2.163,33,2.163,34,2.163,35,1.896,36,2.269,37,1.757,38,1.757,56,1.757,88,1.444,95,2.163,96,2.163,268,2.163,269,3.976]],["title/properties.html",[180,1.612,270,2.288]],["body/properties.html",[11,0.069,26,0.059,27,0.059,65,1.75,257,2.604,264,2.604,270,2.604,271,3.347,272,3.347,273,3.347,274,3.347]],["title/miscellaneous/variables.html",[204,1.083,275,2.288]],["body/miscellaneous/variables.html",[4,0.682,7,0.572,11,0.071,15,0.828,24,1.42,26,0.041,27,0.041,48,1.747,49,2.261,67,1.202,82,1.704,85,1.202,111,1.479,132,1.479,143,1.479,166,1.479,169,2.151,170,1.479,171,1.479,204,0.994,275,1.479,276,1.901,277,1.901,278,2.765,279,3.801,280,3.577,281,3.966,282,1.901,283,1.901,284,1.901,285,1.901,286,1.901,287,1.901,288,2.765,289,1.901,290,1.901,291,1.901,292,1.901,293,1.901,294,1.901,295,1.901,296,2.765,297,3.258,298,1.901,299,1.901,300,1.901,301,1.901,302,1.901,303,1.901]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"injectables/OpenaiService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":272,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":134,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["0.1.13",{"_index":201,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":165,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":130,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["1.3.4",{"_index":190,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":128,"title":{},"body":{"injectables/OpenaiService.html":{},"coverage.html":{}}}],["2",{"_index":269,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":182,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":175,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":177,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":146,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["3",{"_index":76,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["4",{"_index":116,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["4.0.1",{"_index":196,"title":{},"body":{"dependencies.html":{}}}],["4.14.191",{"_index":187,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":192,"title":{},"body":{"dependencies.html":{}}}],["4.6.5",{"_index":198,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":176,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":203,"title":{},"body":{"dependencies.html":{}}}],["8.10.0",{"_index":194,"title":{},"body":{"dependencies.html":{}}}],["8.6.6",{"_index":189,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":248,"title":{},"body":{"index.html":{}}}],["api",{"_index":66,"title":{},"body":{"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"injectables/OpenaiService.html":{}}}],["apiurl",{"_index":117,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["app",{"_index":225,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["application/json",{"_index":123,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["applications",{"_index":217,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array.isarray(value",{"_index":295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":67,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":257,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":124,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["await",{"_index":143,"title":{},"body":{"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":110,"title":{},"body":{"injectables/OpenaiService.html":{},"dependencies.html":{}}}],["axios.post(apiurl",{"_index":144,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["backers",{"_index":249,"title":{},"body":{"index.html":{}}}],["based",{"_index":77,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["bearer",{"_index":125,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["boolean",{"_index":293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":174,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":267,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":265,"title":{},"body":{"modules.html":{}}}],["building",{"_index":212,"title":{},"body":{"index.html":{}}}],["catch",{"_index":157,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["class",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"injectables/OpenaiService.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_openaimodule",{"_index":95,"title":{},"body":{"modules/OpenaiModule.html":{},"overview.html":{}}}],["cluster_openaimodule_providers",{"_index":96,"title":{},"body":{"modules/OpenaiModule.html":{},"overview.html":{}}}],["code",{"_index":156,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["codex",{"_index":115,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["codex/completions",{"_index":119,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["components",{"_index":99,"title":{},"body":{"modules/OpenaiModule.html":{}}}],["config",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":107,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["configuration",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.error('error",{"_index":158,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["const",{"_index":111,"title":{},"body":{"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":105,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["constructor(configservice",{"_index":106,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["content",{"_index":122,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/OpenaiController.html":{}},"body":{"controllers/AppController.html":{},"controllers/OpenaiController.html":{},"coverage.html":{}}}],["controller('openai",{"_index":90,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"overview.html":{}}}],["coverage",{"_index":160,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["data",{"_index":126,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["davinci",{"_index":114,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/OpenaiController.html":{}}}],["deep",{"_index":287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/OpenaiModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":65,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":226,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":237,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":213,"title":{},"body":{"index.html":{}}}],["english",{"_index":138,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["environment",{"_index":284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.config",{"_index":290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":152,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["ese15",{"_index":274,"title":{},"body":{"properties.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"injectables/OpenaiService.html":{}}}],["express",{"_index":185,"title":{},"body":{"dependencies.html":{}}}],["failed",{"_index":154,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"injectables/OpenaiService.html":{},"coverage.html":{}}}],["following",{"_index":137,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["framework",{"_index":211,"title":{},"body":{"index.html":{}}}],["function",{"_index":173,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":205,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":84,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["generated",{"_index":86,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["generatedtext",{"_index":147,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["generatedtext.trim",{"_index":149,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["generates",{"_index":73,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["generatetext",{"_index":68,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["generatetext(@query('prompt",{"_index":93,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["generatetext(prompt",{"_index":69,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["generating",{"_index":159,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["get('generate",{"_index":70,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":207,"title":{"index.html":{}},"body":{}}],["given",{"_index":78,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["gpt",{"_index":75,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["groups",{"_index":98,"title":{},"body":{"modules/OpenaiModule.html":{}}}],["grow",{"_index":244,"title":{},"body":{"index.html":{}}}],["headers",{"_index":121,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["hello",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":254,"title":{},"body":{"index.html":{}}}],["https://api.openai.com/v1/engines/davinci",{"_index":118,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["https://api.openai.com/v1/engines/davinci/completions",{"_index":120,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["https://nestjs.com",{"_index":261,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"injectables/OpenaiService.html":{}}}],["import(`./${process.env.node_env",{"_index":285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/OpenaiModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"injectables/OpenaiService.html":{}}}],["injectable",{"_index":55,"title":{"injectables/AppService.html":{},"injectables/OpenaiService.html":{}},"body":{"injectables/AppService.html":{},"injectables/OpenaiService.html":{},"coverage.html":{}}}],["injectables",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"injectables/OpenaiService.html":{},"overview.html":{}}}],["installation",{"_index":222,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":224,"title":{},"body":{"index.html":{}}}],["interacting",{"_index":104,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["isglobal",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["isobject(value",{"_index":291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":251,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":258,"title":{},"body":{"index.html":{}}}],["korean:\\n\\n\"hello",{"_index":139,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["license",{"_index":264,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":241,"title":{},"body":{"index.html":{}}}],["load",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lodash",{"_index":191,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"injectables/OpenaiService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max_tokens",{"_index":127,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["merge",{"_index":288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":200,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["miscellaneous",{"_index":204,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":240,"title":{},"body":{"index.html":{}}}],["mode",{"_index":230,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/OpenaiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OpenaiModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/OpenaiModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":253,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":259,"title":{},"body":{"index.html":{}}}],["n",{"_index":129,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["name",{"_index":81,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["necessary",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["nest",{"_index":218,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":263,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"injectables/OpenaiService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"injectables/OpenaiService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":183,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":184,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":151,"title":{},"body":{"injectables/OpenaiService.html":{},"coverage.html":{}}}],["node.js",{"_index":210,"title":{},"body":{"index.html":{}}}],["null",{"_index":132,"title":{},"body":{"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign(source[key",{"_index":301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(source).foreach((key",{"_index":298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":242,"title":{},"body":{"index.html":{}}}],["openai",{"_index":64,"title":{},"body":{"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"injectables/OpenaiService.html":{}}}],["openai.controller",{"_index":101,"title":{},"body":{"modules/OpenaiModule.html":{}}}],["openai.service",{"_index":89,"title":{},"body":{"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{}}}],["openai/openai.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["openai_api_key",{"_index":282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openaiapikey",{"_index":112,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["openaicontroller",{"_index":61,"title":{"controllers/OpenaiController.html":{}},"body":{"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"coverage.html":{}}}],["openaimodule",{"_index":35,"title":{"modules/OpenaiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OpenaiModule.html":{},"modules.html":{},"overview.html":{}}}],["openaiservice",{"_index":88,"title":{"injectables/OpenaiService.html":{}},"body":{"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"injectables/OpenaiService.html":{},"coverage.html":{},"overview.html":{}}}],["openapiservice",{"_index":91,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["optional",{"_index":83,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["out",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/OpenaiModule.html":{},"overview.html":{}}}],["overview",{"_index":268,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":180,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":92,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["parameters",{"_index":80,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["pg",{"_index":193,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":135,"title":{},"body":{"injectables/OpenaiService.html":{},"index.html":{}}}],["prefix",{"_index":63,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["process.env.openai_api_key",{"_index":283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":232,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":209,"title":{},"body":{"index.html":{}}}],["project",{"_index":243,"title":{},"body":{"index.html":{}}}],["promise",{"_index":85,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["prompt",{"_index":79,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["properties",{"_index":270,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/OpenaiModule.html":{}}}],["query",{"_index":87,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["read",{"_index":252,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["record",{"_index":297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis",{"_index":197,"title":{},"body":{"dependencies.html":{}}}],["reflect",{"_index":199,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":100,"title":{},"body":{"modules/OpenaiModule.html":{}}}],["repository",{"_index":221,"title":{},"body":{"index.html":{}}}],["request",{"_index":153,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["reset",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/OpenaiModule.html":{},"overview.html":{}}}],["response",{"_index":142,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["response.data.choices[0].text",{"_index":148,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["response.status",{"_index":145,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"injectables/OpenaiService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["root",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":227,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":202,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":214,"title":{},"body":{"index.html":{}}}],["server",{"_index":215,"title":{},"body":{"index.html":{}}}],["service",{"_index":103,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["side",{"_index":216,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"modules/OpenaiModule.html":{},"injectables/OpenaiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["source[key",{"_index":303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sponsors",{"_index":246,"title":{},"body":{"index.html":{}}}],["src/.../configuration.ts",{"_index":278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default.ts",{"_index":276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local.ts",{"_index":277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":206,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/configuration.ts",{"_index":166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/default.ts",{"_index":170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/local.ts",{"_index":171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":172,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/openai/openai.controller.ts",{"_index":62,"title":{},"body":{"controllers/OpenaiController.html":{},"coverage.html":{}}}],["src/openai/openai.controller.ts:18",{"_index":72,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["src/openai/openai.module.ts",{"_index":97,"title":{},"body":{"modules/OpenaiModule.html":{}}}],["src/openai/openai.service.ts",{"_index":102,"title":{},"body":{"injectables/OpenaiService.html":{},"coverage.html":{}}}],["src/openai/openai.service.ts:18",{"_index":109,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["src/openai/openai.service.ts:9",{"_index":108,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["start",{"_index":228,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":231,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":233,"title":{},"body":{"index.html":{}}}],["started",{"_index":208,"title":{"index.html":{}},"body":{}}],["starter",{"_index":220,"title":{},"body":{"index.html":{}}}],["statements",{"_index":163,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":155,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["stay",{"_index":255,"title":{},"body":{"index.html":{}}}],["stop",{"_index":131,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":247,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":266,"title":{},"body":{"modules.html":{}}}],["t",{"_index":292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":179,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":178,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temperature",{"_index":133,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["test",{"_index":236,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":239,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":238,"title":{},"body":{"index.html":{}}}],["tests",{"_index":235,"title":{},"body":{"index.html":{}}}],["text",{"_index":71,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["thanks",{"_index":245,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get('openai_api_key",{"_index":113,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["this.isobject(source[key",{"_index":300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.isobject(target[key",{"_index":299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.merge(target[key",{"_index":302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.openapiservice.generatetext(prompt",{"_index":94,"title":{},"body":{"controllers/OpenaiController.html":{}}}],["throw",{"_index":150,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["touch",{"_index":256,"title":{},"body":{"index.html":{}}}],["translate",{"_index":136,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["true",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["try",{"_index":141,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["twitter",{"_index":262,"title":{},"body":{"index.html":{}}}],["type",{"_index":82,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":195,"title":{},"body":{"dependencies.html":{}}}],["types/lodash",{"_index":186,"title":{},"body":{"dependencies.html":{}}}],["types/pg",{"_index":188,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":219,"title":{},"body":{"index.html":{}}}],["unit",{"_index":234,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":273,"title":{},"body":{"properties.html":{}}}],["using",{"_index":74,"title":{},"body":{"controllers/OpenaiController.html":{},"injectables/OpenaiService.html":{}}}],["util",{"_index":169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["util.merge(config",{"_index":289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":275,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":271,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":229,"title":{},"body":{"index.html":{}}}],["website",{"_index":260,"title":{},"body":{"index.html":{}}}],["world",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":223,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":250,"title":{},"body":{"index.html":{}}}],["you?\"\\n\\n번역:\\n",{"_index":140,"title":{},"body":{"injectables/OpenaiService.html":{}}}],["zoom",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/OpenaiModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nOpenaiModule\n\nOpenaiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nOpenaiModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OpenaiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * This is the root module of the application.\n * It imports all the other necessary modules.\n */\n\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { configuration } from './config';\nimport { OpenaiModule } from './openai/openai.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n    }),\n    OpenaiModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OpenaiController.html":{"url":"controllers/OpenaiController.html","title":"controller - OpenaiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OpenaiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openai/openai.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                openai\n            \n\n\n            \n                Description\n            \n            \n                A controller for the OpenAI API\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateText\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateText(prompt: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('generate-text')\n                \n            \n\n            \n                \n                    Defined in src/openai/openai.controller.ts:18\n                \n            \n\n\n            \n                \n                    Generates text using GPT-3 based on the given prompt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe prompt to generate text for.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The generated text.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { OpenaiService } from './openai.service';\n\n/**\n * A controller for the OpenAI API\n */\n@Controller('openai')\nexport class OpenaiController {\n  constructor(private readonly openapiService: OpenaiService) {}\n\n  /**\n   * Generates text using GPT-3 based on the given prompt\n   *\n   * @param {string} prompt - The prompt to generate text for.\n   * @returns {Promise} The generated text.\n   */\n  @Get('generate-text')\n  async generateText(@Query('prompt') prompt: string): Promise {\n    return this.openapiService.generateText(prompt);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenaiModule.html":{"url":"modules/OpenaiModule.html","title":"module - OpenaiModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenaiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OpenaiModule\n\n\n\ncluster_OpenaiModule_providers\n\n\n\n\nOpenaiService\n\nOpenaiService\n\n\n\nOpenaiModule\n\nOpenaiModule\n\nOpenaiModule -->\n\nOpenaiService->OpenaiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/openai/openai.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OpenaiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OpenaiController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * This module groups all the components related to the OpenAI API.\n */\n\nimport { Module } from '@nestjs/common';\nimport { OpenaiController } from './openai.controller';\nimport { OpenaiService } from './openai.service';\n\n@Module({\n  imports: [],\n  controllers: [OpenaiController],\n  providers: [OpenaiService],\n})\nexport class OpenaiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpenaiService.html":{"url":"injectables/OpenaiService.html","title":"injectable - OpenaiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OpenaiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openai/openai.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service for interacting with the OpenAI GPT-3 API.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/openai/openai.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateText\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateText(prompt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/openai/openai.service.ts:18\n                \n            \n\n\n            \n                \n                    Generates text using the OpenAI GPT-3 API based on the given prompt.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe prompt to generate text for.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The generated text.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport axios from 'axios';\n\n/**\n * A service for interacting with the OpenAI GPT-3 API.\n */\n@Injectable()\nexport class OpenaiService {\n  constructor(private readonly configService: ConfigService) {}\n\n  /**\n   * Generates text using the OpenAI GPT-3 API based on the given prompt.\n   *\n   * @param {string} prompt - The prompt to generate text for.\n   * @returns {Promise} The generated text.\n   */\n  async generateText(prompt: string): Promise {\n    const openaiApiKey = this.configService.get('OPENAI_API_KEY');\n    // davinci-codex는 gpt-4 출시 이후 사용할 엔진이름임\n    //const apiUrl = `https://api.openai.com/v1/engines/davinci-codex/completions`;\n    const apiUrl = `https://api.openai.com/v1/engines/davinci/completions`;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${openaiApiKey}`,\n    };\n\n    const data = {\n      prompt: prompt,\n      max_tokens: 100,\n      n: 1,\n      stop: null,\n      temperature: 0.1,\n    };\n    // const data = {\n    //   prompt: `Please translate the following English text to Korean:\\n\\n\"Hello, how are you?\"\\n\\n번역:\\n`,\n    //   max_tokens: 100,\n    //   n: 1,\n    //   stop: ['\\n'],\n    //   temperature: 0.1,\n    // };\n\n    try {\n      const response = await axios.post(apiUrl, data, { headers: headers });\n      if (response.status === 200) {\n        const generatedText = response.data.choices[0].text;\n        return generatedText.trim();\n      } else {\n        throw new Error(\n          `OpenAI API request failed with status code ${response.status}`,\n        );\n      }\n    } catch (error) {\n      console.error('Error generating text:', error);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            util\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/default.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/local.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/openai/openai.controller.ts\n            \n            controller\n            OpenaiController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/openai/openai.service.ts\n            \n            injectable\n            OpenaiService\n            \n                66 %\n                (2/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @types/lodash : ^4.14.191\n        \n            @types/pg : ^8.6.6\n        \n            axios : ^1.3.4\n        \n            lodash : ^4.17.21\n        \n            pg : ^8.10.0\n        \n            pg-types : ^4.0.1\n        \n            redis : ^4.6.5\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ yarn installRunning the app\n# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\n# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenaiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_OpenaiModule\n\n\n\ncluster_OpenaiModule_providers\n\n\n\n\nOpenaiModule\n\nOpenaiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nOpenaiModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nOpenaiService\n\nOpenaiService\n\nOpenaiModule -->\n\nOpenaiService->OpenaiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : ese15\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../default.ts)\n                        \n                        \n                            config   (src/.../local.ts)\n                        \n                        \n                            configuration   (src/.../configuration.ts)\n                        \n                        \n                            util   (src/.../configuration.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/default.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n    src/config/local.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  OPENAI_API_KEY: process.env.OPENAI_API_KEY,\n}\n                    \n                \n\n\n        \n    \n\n    src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise> => {\n  const environment = await import(`./${process.env.NODE_ENV || 'local'}`);\n\n  // object deep merge\n  return util.merge(config, environment.config);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        util\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  isObject(value: T): boolean {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n  },\n  merge(\n    target: Record,\n    source: Record,\n  ): Record {\n    Object.keys(source).forEach((key: string) => {\n      if (this.isObject(target[key]) && this.isObject(source[key])) {\n        Object.assign(source[key], this.merge(target[key], source[key]));\n      }\n    });\n\n    return { ...target, ...source };\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
